{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\risha\\\\Desktop\\\\ITLAB\\\\Netflix\\\\src\\\\components\\\\Row.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport requests from \"../utils/requests\";\nimport Movie from \"./Movie\";\nimport Series from \"./Series\";\nimport \"./Row.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Row({\n  title,\n  fetchUrl,\n  localUrl,\n  type\n}) {\n  _s();\n\n  const {\n    api,\n    urls,\n    localAPI\n  } = requests;\n  const [movies, setMovies] = useState([]);\n  const [loaded, setLoaded] = useState(false);\n  useEffect(() => {\n    async function getPopularMovies() {\n      const response = localUrl ? await localAPI.get(fetchUrl) : await api.get(fetchUrl);\n      setMovies(response.data.results);\n      setLoaded(true);\n      return response;\n    }\n\n    getPopularMovies();\n  }, [fetchUrl]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row__movies\",\n      children: loaded && movies.map(movie => {\n        return type == \"movies\" ? /*#__PURE__*/_jsxDEV(Movie, {\n          data: movie\n        }, movie.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 8\n        }, this) : /*#__PURE__*/_jsxDEV(Series, {\n          data: movie\n        }, movie.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 8\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Row, \"5d46gBRdmqUP0o7UGqiGfbkQ56A=\");\n\n_c = Row;\nexport default Row;\n\nvar _c;\n\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"sources":["C:/Users/risha/Desktop/ITLAB/Netflix/src/components/Row.jsx"],"names":["React","useEffect","useState","requests","Movie","Series","Row","title","fetchUrl","localUrl","type","api","urls","localAPI","movies","setMovies","loaded","setLoaded","getPopularMovies","response","get","data","results","map","movie","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAO,WAAP;;;AAEA,SAASC,GAAT,CAAa;AAAEC,EAAAA,KAAF;AAASC,EAAAA,QAAT;AAAmBC,EAAAA,QAAnB;AAA6BC,EAAAA;AAA7B,CAAb,EAAkD;AAAA;;AACjD,QAAM;AAAEC,IAAAA,GAAF;AAAOC,IAAAA,IAAP;AAAaC,IAAAA;AAAb,MAA0BV,QAAhC;AACA,QAAM,CAACW,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACc,MAAD,EAASC,SAAT,IAAsBf,QAAQ,CAAC,KAAD,CAApC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACf,mBAAeiB,gBAAf,GAAkC;AACjC,YAAMC,QAAQ,GAAGV,QAAQ,GACtB,MAAMI,QAAQ,CAACO,GAAT,CAAaZ,QAAb,CADgB,GAEtB,MAAMG,GAAG,CAACS,GAAJ,CAAQZ,QAAR,CAFT;AAGAO,MAAAA,SAAS,CAACI,QAAQ,CAACE,IAAT,CAAcC,OAAf,CAAT;AACAL,MAAAA,SAAS,CAAC,IAAD,CAAT;AAEA,aAAOE,QAAP;AACA;;AAEDD,IAAAA,gBAAgB;AAChB,GAZQ,EAYN,CAACV,QAAD,CAZM,CAAT;AAcA,sBACC;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACC;AAAA,gBAAKD;AAAL;AAAA;AAAA;AAAA;AAAA,YADD,eAEC;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,gBACES,MAAM,IACNF,MAAM,CAACS,GAAP,CAAYC,KAAD,IAAW;AACrB,eAAOd,IAAI,IAAI,QAAR,gBACN,QAAC,KAAD;AAAO,UAAA,IAAI,EAAEc;AAAb,WAAyBA,KAAK,CAACC,EAA/B;AAAA;AAAA;AAAA;AAAA,gBADM,gBAGN,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAED;AAAd,WAA0BA,KAAK,CAACC,EAAhC;AAAA;AAAA;AAAA;AAAA,gBAHD;AAKA,OAND;AAFF;AAAA;AAAA;AAAA;AAAA,YAFD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAeA;;GAlCQnB,G;;KAAAA,G;AAoCT,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport requests from \"../utils/requests\";\r\nimport Movie from \"./Movie\";\r\nimport Series from \"./Series\";\r\nimport \"./Row.css\";\r\n\r\nfunction Row({ title, fetchUrl, localUrl, type }) {\r\n\tconst { api, urls, localAPI } = requests;\r\n\tconst [movies, setMovies] = useState([]);\r\n\tconst [loaded, setLoaded] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tasync function getPopularMovies() {\r\n\t\t\tconst response = localUrl\r\n\t\t\t\t? await localAPI.get(fetchUrl)\r\n\t\t\t\t: await api.get(fetchUrl);\r\n\t\t\tsetMovies(response.data.results);\r\n\t\t\tsetLoaded(true);\r\n\r\n\t\t\treturn response;\r\n\t\t}\r\n\r\n\t\tgetPopularMovies();\r\n\t}, [fetchUrl]);\r\n\r\n\treturn (\r\n\t\t<div className=\"row\">\r\n\t\t\t<h2>{title}</h2>\r\n\t\t\t<div className=\"row__movies\">\r\n\t\t\t\t{loaded &&\r\n\t\t\t\t\tmovies.map((movie) => {\r\n\t\t\t\t\t\treturn type == \"movies\" ? (\r\n\t\t\t\t\t\t\t<Movie data={movie} key={movie.id} />\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<Series data={movie} key={movie.id} />\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Row;\r\n"]},"metadata":{},"sourceType":"module"}